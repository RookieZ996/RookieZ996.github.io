{"meta":{"title":"MrzBlog","subtitle":"","description":"No way","author":"Zzzy","url":"http://RookieZ996.github.io","root":"/"},"pages":[{"title":"categories","date":"2020-06-19T12:27:22.000Z","updated":"2020-06-19T12:27:37.816Z","comments":false,"path":"categories/index.html","permalink":"http://rookiez996.github.io/categories/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"tags","date":"2020-06-19T12:26:24.000Z","updated":"2020-06-19T12:27:12.433Z","comments":false,"path":"tags/index.html","permalink":"http://rookiez996.github.io/tags/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"about","date":"2020-06-19T12:27:49.000Z","updated":"2020-06-19T12:27:59.704Z","comments":true,"path":"about/index.html","permalink":"http://rookiez996.github.io/about/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"}],"posts":[{"title":"mysql知识点","slug":"mysql知识点","date":"2020-06-19T12:43:55.688Z","updated":"2020-06-19T13:00:19.387Z","comments":true,"path":"2020/06/19/mysql知识点/","link":"","permalink":"http://rookiez996.github.io/2020/06/19/mysql%E7%9F%A5%E8%AF%86%E7%82%B9/","excerpt":"","text":"[TOC] Sql知识点去重统计岗位数量 连接查询找出每个员工的部门名字和上级领导以及薪资等级，在一张表中呈现 嵌套子查询找出每个部门平均薪资的等级 image-20200424195818187 找出每个部门平均的薪资等级 image-20200424195846234 Limit的使用（mysql特有的）取出工资前五名 limit 第一个参数是起始位置，从0开始记，第二个参数表示长度 image-20200424200318318 tip：limit是sql语句中最后执行的环节 表的复制复制一张dept表，叫做dept1 将查询结果插入表中将dept表中的数据插入到dept1中 修改数据修改dept1编号为10的部门名为renshibu，地点为上海 删除数据删除10部门数据 删除大表数据。表被截断，不可回滚，一去不复返 约束非空约束：创建一个员工表，姓名不得为空 唯一性约束： 列级约束1234567891011drop table if exists t_user;create table t_user(id int,username varchar(255) unique);insert into t_user values(1,\"zhangsan\");insert into t_user values(2,\"zhangsan\");//错误 用户名重复insert into t_user(id) values(2);insert into t_user(id) values(3);//正确执行，同为null不认为是重复 表级约束123456789drop table if exists t_user;create table t_user(id int,username varchar(255),unique(id,username)--表示联合约束“id”与“username”拼接不能相同);insert into t_user values(1,\"zhangsan\");insert into t_user values(2,\"zhangsan\");insert into t_user values(1,\"zhangsan\"); --错误 重复 主键约束 主键字段不得为空也不得重复 1234567891011drop table if exists t_user;create table t_user(no int primary key,name varchar(255));insert into t_user values(1,'zhangsan');insert into t_user values(2,'lisi');insert into t_user values(3,'wangwu');insert into t_user values(1,'wangwu');--错误，主键重复insert into t_user (name) values('wangwu');--错误，主键不能为空 主键字段自增auto_increment 123456789drop table if exists t_user;create table t_user(no int primary key auto_increment,name varchar(255));insert into t_user(name) values('wangwu');insert into t_user(name) values('lisi');insert into t_user(name) values('zhangsan');select * from t_user; 外键约束 1234567891011121314151617181920212223242526272829drop table if exists t_student;drop table if exists t_class;create table t_class(cno int,classname varchar(255),primary key(cno));create table t_student(sno int,sname varchar(255),classno int,primary key(sno),foreign key(classno) references t_class(cno));insert into t_class values(101,'xxxxxxxxxxxx');insert into t_class values(102,'yyyyyyyyyyyy');insert into t_student values(1,'zs1',101);insert into t_student values(2,'zs2',101);insert into t_student values(3,'zs3',102);insert into t_student values(4,'zs4',102);insert into t_student values(5,'zs5',102);insert into t_student values(6,'zs6',103);--执行失败，外键约束select * from t_class;select * from t_student; Mysql中的存储引擎查看当前mysql支持的存储引擎 show engines \\G MyISAM 采用三个文件组织一张表 1.xxx.FRM 存储表结构（格式） 2.xxx.MYD 存储表中数据 3.xxx.MYI 存储表中的索引 优点：可被压缩，节省存储空间。可以转化为只读表，提高检索效率 缺点：不支持事务。 InnoDB xxx.FRM存储表结构 数据存储在tablespace中，这是一个逻辑概念。无法被压缩，无法转化为只读。 InnoDB支持级联删除和级联更新。（父信息和子信息联动删除和更改） 优点：支持事务、行级锁、外键。存储数据安全 Memory 查询速度最快，但是表存储在内存中，关机就没。 事务事务只与DML语句挂钩，即insert,delete,updata语句 四大特性ACID 1.Atomicity：原子性：事务是最小的工作单元，不可再分。 2.Consistency：一致性：事务必须保证多条DML语句同时成功或失败 3.Isolation：隔离性：事务A与事务B之间具有隔离 4.Durability：持久性：最终数据必须持久化到硬盘中，事务才算成功结束。 image-20200430142457042 Demo对比commit和rollback12345678910111213141516171819drop table if exists t_user;create table t_user(id int primary key auto_increment,name varchar(255));insert into t_user(name) values('zhangsan');start transaction;insert into t_user(name) values('lisi');insert into t_user(name) values('wangwu');rollback;select * from t_user; insert into t_user(name) values('zhangsan');start transaction;insert into t_user(name) values('lisi');insert into t_user(name) values('wangwu');commit;select * from t_user; Demo尝试四种隔离级别(此处不给例子)设置事务隔离级别 1set global transaction ioslation level read committed; 查看事务隔离级别 1select @@global.tx_isolation; 索引添加条件 1.数据量庞大 2.该字段很少进行DML操作（一旦进行DML操作，索引需要维护，成本很高） 3.该字段需要经常被查询 注意：主键和unique约束的字段自动添加索引 tip：查看sql语句的执行原理 1explain select ename,sal from emp where ename='smith'; 索引语法 创建索引 create index 索引名 on 表名(字段名) 1create index emp_sal_index on emp(sal); 删除索引 drop index 索引名 on 表名 1drop index emp_sal_index on emp; 实现原理 image-20200503114054028 视图创建视图 1create view myview as select empno,ename from emp; 对视图进行crud会影响原表中的数据 数据备份数据库导出（在dos命令窗口执行 不需要登陆mysql） 1mysqldump bjpowernode&gt;D:\\ls\\数挖 -uroot -p7ag-z6(s; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]}],"categories":[],"tags":[]}